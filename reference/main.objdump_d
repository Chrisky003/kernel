
main:     file format elf32-i386


Disassembly of section .init:

00000488 <_init>:
 488:	53                   	push   %ebx
 489:	83 ec 08             	sub    $0x8,%esp
 48c:	e8 9f 00 00 00       	call   530 <__x86.get_pc_thunk.bx>
 491:	81 c3 4b 1b 00 00    	add    $0x1b4b,%ebx
 497:	8b 83 1c 00 00 00    	mov    0x1c(%ebx),%eax
 49d:	85 c0                	test   %eax,%eax
 49f:	74 05                	je     4a6 <_init+0x1e>
 4a1:	e8 42 00 00 00       	call   4e8 <__gmon_start__@plt>
 4a6:	e8 b5 01 00 00       	call   660 <frame_dummy>
 4ab:	e8 80 03 00 00       	call   830 <__do_global_ctors_aux>
 4b0:	83 c4 08             	add    $0x8,%esp
 4b3:	5b                   	pop    %ebx
 4b4:	c3                   	ret    

Disassembly of section .plt:

000004c0 <.plt>:
 4c0:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
 4c6:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
 4cc:	00 00                	add    %al,(%eax)
	...

000004d0 <__libc_start_main@plt>:
 4d0:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
 4d6:	68 00 00 00 00       	push   $0x0
 4db:	e9 e0 ff ff ff       	jmp    4c0 <.plt>

Disassembly of section .plt.got:

000004e0 <__cxa_finalize@plt>:
 4e0:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
 4e6:	66 90                	xchg   %ax,%ax

000004e8 <__gmon_start__@plt>:
 4e8:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
 4ee:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

000004f0 <_start>:
 4f0:	31 ed                	xor    %ebp,%ebp
 4f2:	5e                   	pop    %esi
 4f3:	89 e1                	mov    %esp,%ecx
 4f5:	83 e4 f0             	and    $0xfffffff0,%esp
 4f8:	50                   	push   %eax
 4f9:	54                   	push   %esp
 4fa:	52                   	push   %edx
 4fb:	e8 22 00 00 00       	call   522 <_start+0x32>
 500:	81 c3 dc 1a 00 00    	add    $0x1adc,%ebx
 506:	8d 83 44 e8 ff ff    	lea    -0x17bc(%ebx),%eax
 50c:	50                   	push   %eax
 50d:	8d 83 e4 e7 ff ff    	lea    -0x181c(%ebx),%eax
 513:	50                   	push   %eax
 514:	51                   	push   %ecx
 515:	56                   	push   %esi
 516:	ff b3 14 00 00 00    	pushl  0x14(%ebx)
 51c:	e8 af ff ff ff       	call   4d0 <__libc_start_main@plt>
 521:	f4                   	hlt    
 522:	8b 1c 24             	mov    (%esp),%ebx
 525:	c3                   	ret    
 526:	66 90                	xchg   %ax,%ax
 528:	66 90                	xchg   %ax,%ax
 52a:	66 90                	xchg   %ax,%ax
 52c:	66 90                	xchg   %ax,%ax
 52e:	66 90                	xchg   %ax,%ax

00000530 <__x86.get_pc_thunk.bx>:
 530:	8b 1c 24             	mov    (%esp),%ebx
 533:	c3                   	ret    
 534:	66 90                	xchg   %ax,%ax
 536:	66 90                	xchg   %ax,%ax
 538:	66 90                	xchg   %ax,%ax
 53a:	66 90                	xchg   %ax,%ax
 53c:	66 90                	xchg   %ax,%ax
 53e:	66 90                	xchg   %ax,%ax

00000540 <deregister_tm_clones>:
 540:	e8 24 01 00 00       	call   669 <__x86.get_pc_thunk.dx>
 545:	81 c2 97 1a 00 00    	add    $0x1a97,%edx
 54b:	8d 8a 34 00 00 00    	lea    0x34(%edx),%ecx
 551:	8d 82 34 00 00 00    	lea    0x34(%edx),%eax
 557:	39 c8                	cmp    %ecx,%eax
 559:	74 1d                	je     578 <deregister_tm_clones+0x38>
 55b:	8b 82 18 00 00 00    	mov    0x18(%edx),%eax
 561:	85 c0                	test   %eax,%eax
 563:	74 13                	je     578 <deregister_tm_clones+0x38>
 565:	55                   	push   %ebp
 566:	89 e5                	mov    %esp,%ebp
 568:	83 ec 14             	sub    $0x14,%esp
 56b:	51                   	push   %ecx
 56c:	ff d0                	call   *%eax
 56e:	83 c4 10             	add    $0x10,%esp
 571:	c9                   	leave  
 572:	c3                   	ret    
 573:	90                   	nop
 574:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 578:	f3 c3                	repz ret 
 57a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00000580 <register_tm_clones>:
 580:	e8 e4 00 00 00       	call   669 <__x86.get_pc_thunk.dx>
 585:	81 c2 57 1a 00 00    	add    $0x1a57,%edx
 58b:	55                   	push   %ebp
 58c:	8d 8a 34 00 00 00    	lea    0x34(%edx),%ecx
 592:	8d 82 34 00 00 00    	lea    0x34(%edx),%eax
 598:	29 c8                	sub    %ecx,%eax
 59a:	89 e5                	mov    %esp,%ebp
 59c:	53                   	push   %ebx
 59d:	c1 f8 02             	sar    $0x2,%eax
 5a0:	89 c3                	mov    %eax,%ebx
 5a2:	83 ec 04             	sub    $0x4,%esp
 5a5:	c1 eb 1f             	shr    $0x1f,%ebx
 5a8:	01 d8                	add    %ebx,%eax
 5aa:	d1 f8                	sar    %eax
 5ac:	74 14                	je     5c2 <register_tm_clones+0x42>
 5ae:	8b 92 20 00 00 00    	mov    0x20(%edx),%edx
 5b4:	85 d2                	test   %edx,%edx
 5b6:	74 0a                	je     5c2 <register_tm_clones+0x42>
 5b8:	83 ec 08             	sub    $0x8,%esp
 5bb:	50                   	push   %eax
 5bc:	51                   	push   %ecx
 5bd:	ff d2                	call   *%edx
 5bf:	83 c4 10             	add    $0x10,%esp
 5c2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 5c5:	c9                   	leave  
 5c6:	c3                   	ret    
 5c7:	89 f6                	mov    %esi,%esi
 5c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000005d0 <__do_global_dtors_aux>:
 5d0:	55                   	push   %ebp
 5d1:	89 e5                	mov    %esp,%ebp
 5d3:	57                   	push   %edi
 5d4:	56                   	push   %esi
 5d5:	53                   	push   %ebx
 5d6:	e8 55 ff ff ff       	call   530 <__x86.get_pc_thunk.bx>
 5db:	81 c3 01 1a 00 00    	add    $0x1a01,%ebx
 5e1:	83 ec 0c             	sub    $0xc,%esp
 5e4:	80 bb 34 00 00 00 00 	cmpb   $0x0,0x34(%ebx)
 5eb:	75 65                	jne    652 <__do_global_dtors_aux+0x82>
 5ed:	8b 83 10 00 00 00    	mov    0x10(%ebx),%eax
 5f3:	85 c0                	test   %eax,%eax
 5f5:	74 11                	je     608 <__do_global_dtors_aux+0x38>
 5f7:	83 ec 0c             	sub    $0xc,%esp
 5fa:	ff b3 28 00 00 00    	pushl  0x28(%ebx)
 600:	e8 db fe ff ff       	call   4e0 <__cxa_finalize@plt>
 605:	83 c4 10             	add    $0x10,%esp
 608:	8d bb c8 fe ff ff    	lea    -0x138(%ebx),%edi
 60e:	8d b3 cc fe ff ff    	lea    -0x134(%ebx),%esi
 614:	8b 83 38 00 00 00    	mov    0x38(%ebx),%eax
 61a:	29 fe                	sub    %edi,%esi
 61c:	c1 fe 02             	sar    $0x2,%esi
 61f:	83 ee 01             	sub    $0x1,%esi
 622:	39 f0                	cmp    %esi,%eax
 624:	73 20                	jae    646 <__do_global_dtors_aux+0x76>
 626:	8d 76 00             	lea    0x0(%esi),%esi
 629:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
 630:	83 c0 01             	add    $0x1,%eax
 633:	89 83 38 00 00 00    	mov    %eax,0x38(%ebx)
 639:	ff 14 87             	call   *(%edi,%eax,4)
 63c:	8b 83 38 00 00 00    	mov    0x38(%ebx),%eax
 642:	39 f0                	cmp    %esi,%eax
 644:	72 ea                	jb     630 <__do_global_dtors_aux+0x60>
 646:	e8 f5 fe ff ff       	call   540 <deregister_tm_clones>
 64b:	c6 83 34 00 00 00 01 	movb   $0x1,0x34(%ebx)
 652:	8d 65 f4             	lea    -0xc(%ebp),%esp
 655:	5b                   	pop    %ebx
 656:	5e                   	pop    %esi
 657:	5f                   	pop    %edi
 658:	5d                   	pop    %ebp
 659:	c3                   	ret    
 65a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00000660 <frame_dummy>:
 660:	55                   	push   %ebp
 661:	89 e5                	mov    %esp,%ebp
 663:	5d                   	pop    %ebp
 664:	e9 17 ff ff ff       	jmp    580 <register_tm_clones>

00000669 <__x86.get_pc_thunk.dx>:
 669:	8b 14 24             	mov    (%esp),%edx
 66c:	c3                   	ret    

0000066d <_Z4funcv>:
 66d:	55                   	push   %ebp
 66e:	89 e5                	mov    %esp,%ebp
 670:	e8 43 01 00 00       	call   7b8 <__x86.get_pc_thunk.ax>
 675:	05 67 19 00 00       	add    $0x1967,%eax
 67a:	90                   	nop
 67b:	5d                   	pop    %ebp
 67c:	c3                   	ret    

0000067d <_Z5func2v>:
 67d:	55                   	push   %ebp
 67e:	89 e5                	mov    %esp,%ebp
 680:	e8 33 01 00 00       	call   7b8 <__x86.get_pc_thunk.ax>
 685:	05 57 19 00 00       	add    $0x1957,%eax
 68a:	90                   	nop
 68b:	5d                   	pop    %ebp
 68c:	c3                   	ret    

0000068d <main>:
 68d:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 691:	83 e4 f0             	and    $0xfffffff0,%esp
 694:	ff 71 fc             	pushl  -0x4(%ecx)
 697:	55                   	push   %ebp
 698:	89 e5                	mov    %esp,%ebp
 69a:	53                   	push   %ebx
 69b:	51                   	push   %ecx
 69c:	83 ec 10             	sub    $0x10,%esp
 69f:	e8 8c fe ff ff       	call   530 <__x86.get_pc_thunk.bx>
 6a4:	81 c3 38 19 00 00    	add    $0x1938,%ebx
 6aa:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 6b1:	8d 83 2c 00 00 00    	lea    0x2c(%ebx),%eax
 6b7:	89 45 f0             	mov    %eax,-0x10(%ebp)
 6ba:	8b 45 f0             	mov    -0x10(%ebp),%eax
 6bd:	8b 00                	mov    (%eax),%eax
 6bf:	8b 00                	mov    (%eax),%eax
 6c1:	83 ec 0c             	sub    $0xc,%esp
 6c4:	ff 75 f0             	pushl  -0x10(%ebp)
 6c7:	ff d0                	call   *%eax
 6c9:	83 c4 10             	add    $0x10,%esp
 6cc:	89 45 ec             	mov    %eax,-0x14(%ebp)
 6cf:	8d 83 30 00 00 00    	lea    0x30(%ebx),%eax
 6d5:	89 45 f0             	mov    %eax,-0x10(%ebp)
 6d8:	8b 45 f0             	mov    -0x10(%ebp),%eax
 6db:	8b 00                	mov    (%eax),%eax
 6dd:	8b 00                	mov    (%eax),%eax
 6df:	83 ec 0c             	sub    $0xc,%esp
 6e2:	ff 75 f0             	pushl  -0x10(%ebp)
 6e5:	ff d0                	call   *%eax
 6e7:	83 c4 10             	add    $0x10,%esp
 6ea:	89 45 ec             	mov    %eax,-0x14(%ebp)
 6ed:	8d 83 2c 00 00 00    	lea    0x2c(%ebx),%eax
 6f3:	89 45 f4             	mov    %eax,-0xc(%ebp)
 6f6:	8b 45 f4             	mov    -0xc(%ebp),%eax
 6f9:	8b 00                	mov    (%eax),%eax
 6fb:	8b 00                	mov    (%eax),%eax
 6fd:	83 ec 0c             	sub    $0xc,%esp
 700:	ff 75 f4             	pushl  -0xc(%ebp)
 703:	ff d0                	call   *%eax
 705:	83 c4 10             	add    $0x10,%esp
 708:	89 45 ec             	mov    %eax,-0x14(%ebp)
 70b:	8b 45 f4             	mov    -0xc(%ebp),%eax
 70e:	8b 00                	mov    (%eax),%eax
 710:	83 c0 04             	add    $0x4,%eax
 713:	8b 00                	mov    (%eax),%eax
 715:	83 ec 0c             	sub    $0xc,%esp
 718:	ff 75 f4             	pushl  -0xc(%ebp)
 71b:	ff d0                	call   *%eax
 71d:	83 c4 10             	add    $0x10,%esp
 720:	89 45 ec             	mov    %eax,-0x14(%ebp)
 723:	8d 83 30 00 00 00    	lea    0x30(%ebx),%eax
 729:	89 45 f4             	mov    %eax,-0xc(%ebp)
 72c:	8b 45 f4             	mov    -0xc(%ebp),%eax
 72f:	8b 00                	mov    (%eax),%eax
 731:	8b 00                	mov    (%eax),%eax
 733:	83 ec 0c             	sub    $0xc,%esp
 736:	ff 75 f4             	pushl  -0xc(%ebp)
 739:	ff d0                	call   *%eax
 73b:	83 c4 10             	add    $0x10,%esp
 73e:	89 45 ec             	mov    %eax,-0x14(%ebp)
 741:	8b 45 f4             	mov    -0xc(%ebp),%eax
 744:	8b 00                	mov    (%eax),%eax
 746:	83 c0 04             	add    $0x4,%eax
 749:	8b 00                	mov    (%eax),%eax
 74b:	83 ec 0c             	sub    $0xc,%esp
 74e:	ff 75 f4             	pushl  -0xc(%ebp)
 751:	ff d0                	call   *%eax
 753:	83 c4 10             	add    $0x10,%esp
 756:	89 45 ec             	mov    %eax,-0x14(%ebp)
 759:	b8 01 00 00 00       	mov    $0x1,%eax
 75e:	8d 65 f8             	lea    -0x8(%ebp),%esp
 761:	59                   	pop    %ecx
 762:	5b                   	pop    %ebx
 763:	5d                   	pop    %ebp
 764:	8d 61 fc             	lea    -0x4(%ecx),%esp
 767:	c3                   	ret    

00000768 <_ZN2c24funcEv>:
 768:	55                   	push   %ebp
 769:	89 e5                	mov    %esp,%ebp
 76b:	e8 48 00 00 00       	call   7b8 <__x86.get_pc_thunk.ax>
 770:	05 6c 18 00 00       	add    $0x186c,%eax
 775:	b8 02 00 00 00       	mov    $0x2,%eax
 77a:	5d                   	pop    %ebp
 77b:	c3                   	ret    

0000077c <_ZN2c25func2Ev>:
 77c:	55                   	push   %ebp
 77d:	89 e5                	mov    %esp,%ebp
 77f:	e8 34 00 00 00       	call   7b8 <__x86.get_pc_thunk.ax>
 784:	05 58 18 00 00       	add    $0x1858,%eax
 789:	b8 02 00 00 00       	mov    $0x2,%eax
 78e:	5d                   	pop    %ebp
 78f:	c3                   	ret    

00000790 <_ZN2c34funcEv>:
 790:	55                   	push   %ebp
 791:	89 e5                	mov    %esp,%ebp
 793:	e8 20 00 00 00       	call   7b8 <__x86.get_pc_thunk.ax>
 798:	05 44 18 00 00       	add    $0x1844,%eax
 79d:	b8 03 00 00 00       	mov    $0x3,%eax
 7a2:	5d                   	pop    %ebp
 7a3:	c3                   	ret    

000007a4 <_ZN2c35func2Ev>:
 7a4:	55                   	push   %ebp
 7a5:	89 e5                	mov    %esp,%ebp
 7a7:	e8 0c 00 00 00       	call   7b8 <__x86.get_pc_thunk.ax>
 7ac:	05 30 18 00 00       	add    $0x1830,%eax
 7b1:	b8 03 00 00 00       	mov    $0x3,%eax
 7b6:	5d                   	pop    %ebp
 7b7:	c3                   	ret    

000007b8 <__x86.get_pc_thunk.ax>:
 7b8:	8b 04 24             	mov    (%esp),%eax
 7bb:	c3                   	ret    
 7bc:	66 90                	xchg   %ax,%ax
 7be:	66 90                	xchg   %ax,%ax

000007c0 <__libc_csu_init>:
 7c0:	55                   	push   %ebp
 7c1:	57                   	push   %edi
 7c2:	56                   	push   %esi
 7c3:	53                   	push   %ebx
 7c4:	e8 67 fd ff ff       	call   530 <__x86.get_pc_thunk.bx>
 7c9:	81 c3 13 18 00 00    	add    $0x1813,%ebx
 7cf:	83 ec 0c             	sub    $0xc,%esp
 7d2:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 7d6:	8d b3 c0 fe ff ff    	lea    -0x140(%ebx),%esi
 7dc:	e8 a7 fc ff ff       	call   488 <_init>
 7e1:	8d 83 b8 fe ff ff    	lea    -0x148(%ebx),%eax
 7e7:	29 c6                	sub    %eax,%esi
 7e9:	c1 fe 02             	sar    $0x2,%esi
 7ec:	85 f6                	test   %esi,%esi
 7ee:	74 25                	je     815 <__libc_csu_init+0x55>
 7f0:	31 ff                	xor    %edi,%edi
 7f2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 7f8:	83 ec 04             	sub    $0x4,%esp
 7fb:	55                   	push   %ebp
 7fc:	ff 74 24 2c          	pushl  0x2c(%esp)
 800:	ff 74 24 2c          	pushl  0x2c(%esp)
 804:	ff 94 bb b8 fe ff ff 	call   *-0x148(%ebx,%edi,4)
 80b:	83 c7 01             	add    $0x1,%edi
 80e:	83 c4 10             	add    $0x10,%esp
 811:	39 fe                	cmp    %edi,%esi
 813:	75 e3                	jne    7f8 <__libc_csu_init+0x38>
 815:	83 c4 0c             	add    $0xc,%esp
 818:	5b                   	pop    %ebx
 819:	5e                   	pop    %esi
 81a:	5f                   	pop    %edi
 81b:	5d                   	pop    %ebp
 81c:	c3                   	ret    
 81d:	8d 76 00             	lea    0x0(%esi),%esi

00000820 <__libc_csu_fini>:
 820:	f3 c3                	repz ret 
 822:	66 90                	xchg   %ax,%ax
 824:	66 90                	xchg   %ax,%ax
 826:	66 90                	xchg   %ax,%ax
 828:	66 90                	xchg   %ax,%ax
 82a:	66 90                	xchg   %ax,%ax
 82c:	66 90                	xchg   %ax,%ax
 82e:	66 90                	xchg   %ax,%ax

00000830 <__do_global_ctors_aux>:
 830:	e8 34 fe ff ff       	call   669 <__x86.get_pc_thunk.dx>
 835:	81 c2 a7 17 00 00    	add    $0x17a7,%edx
 83b:	8b 82 c0 fe ff ff    	mov    -0x140(%edx),%eax
 841:	83 f8 ff             	cmp    $0xffffffff,%eax
 844:	74 2a                	je     870 <__do_global_ctors_aux+0x40>
 846:	55                   	push   %ebp
 847:	89 e5                	mov    %esp,%ebp
 849:	53                   	push   %ebx
 84a:	8d 9a c0 fe ff ff    	lea    -0x140(%edx),%ebx
 850:	83 ec 04             	sub    $0x4,%esp
 853:	90                   	nop
 854:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 858:	83 eb 04             	sub    $0x4,%ebx
 85b:	ff d0                	call   *%eax
 85d:	8b 03                	mov    (%ebx),%eax
 85f:	83 f8 ff             	cmp    $0xffffffff,%eax
 862:	75 f4                	jne    858 <__do_global_ctors_aux+0x28>
 864:	83 c4 04             	add    $0x4,%esp
 867:	5b                   	pop    %ebx
 868:	5d                   	pop    %ebp
 869:	c3                   	ret    
 86a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 870:	f3 c3                	repz ret 

Disassembly of section .fini:

00000874 <_fini>:
 874:	53                   	push   %ebx
 875:	83 ec 08             	sub    $0x8,%esp
 878:	e8 b3 fc ff ff       	call   530 <__x86.get_pc_thunk.bx>
 87d:	81 c3 5f 17 00 00    	add    $0x175f,%ebx
 883:	e8 48 fd ff ff       	call   5d0 <__do_global_dtors_aux>
 888:	83 c4 08             	add    $0x8,%esp
 88b:	5b                   	pop    %ebx
 88c:	c3                   	ret    
